/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    producer: Producer;
    event: Event;
    'menu-type': MenuType;
    wine: Wine;
    'normal-item': NormalItem;
    food: Food;
    'clothing-categories': ClothingCategory;
    clothing: Clothing;
    'offer-ids': OfferId;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    hero: Hero;
    'event-room': EventRoom;
    imprint: Imprint;
    privacy: Privacy;
    about: About;
    contact: Contact;
    footer: Footer;
    offers: Offer;
  };
  locale: 'en' | 'de';
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "producer".
 */
export interface Producer {
  id: number;
  name: string;
  link: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event".
 */
export interface Event {
  id: number;
  title: string;
  date: string;
  time: string;
  location: string;
  description: string;
  image?: (number | null) | Media;
  recurring: boolean;
  reservation: boolean;
  price?: number | null;
  regiondoOffer?: (number | null) | OfferId;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  text?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-ids".
 */
export interface OfferId {
  id: number;
  offerId: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu-type".
 */
export interface MenuType {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wine".
 */
export interface Wine {
  id: number;
  title: string;
  description: string;
  price: number;
  priceBottle: number;
  harvest?: string | null;
  taste: string;
  producer: number | Producer;
  type?: (number | null) | MenuType;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "normal-item".
 */
export interface NormalItem {
  id: number;
  title: string;
  description?: string | null;
  price?:
    | {
        value: number;
        id?: string | null;
      }[]
    | null;
  type?: (number | null) | MenuType;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "food".
 */
export interface Food {
  id: number;
  number: number;
  title: string;
  description: string;
  price: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clothing-categories".
 */
export interface ClothingCategory {
  id: number;
  category: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clothing".
 */
export interface Clothing {
  id: number;
  title: string;
  description: string;
  price: number;
  salePrice?: number | null;
  image?: (number | null) | Media;
  category: number | ClothingCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'producer';
        value: number | Producer;
      } | null)
    | ({
        relationTo: 'event';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'menu-type';
        value: number | MenuType;
      } | null)
    | ({
        relationTo: 'wine';
        value: number | Wine;
      } | null)
    | ({
        relationTo: 'normal-item';
        value: number | NormalItem;
      } | null)
    | ({
        relationTo: 'food';
        value: number | Food;
      } | null)
    | ({
        relationTo: 'clothing-categories';
        value: number | ClothingCategory;
      } | null)
    | ({
        relationTo: 'clothing';
        value: number | Clothing;
      } | null)
    | ({
        relationTo: 'offer-ids';
        value: number | OfferId;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo: number | Media;
  navigation?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero".
 */
export interface Hero {
  id: number;
  backgroundImage: number | Media;
  sloganImage: number | Media;
  openingHours?:
    | {
        title: string;
        list?:
          | {
              timespan: string;
              hours: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'opening-hours';
      }[]
    | null;
  heading: string;
  subheading: string;
  primary: {
    label: string;
    url: string;
    id?: string | null;
    blockName?: string | null;
    blockType: 'action';
  }[];
  secondary: {
    label: string;
    url: string;
    id?: string | null;
    blockName?: string | null;
    blockType: 'action';
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-room".
 */
export interface EventRoom {
  id: number;
  title: string;
  description: string;
  interior_label: string;
  interior?:
    | {
        item: string;
        id?: string | null;
      }[]
    | null;
  ask_label: string;
  fotos?:
    | {
        photo: number | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imprint".
 */
export interface Imprint {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  content_html?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy".
 */
export interface Privacy {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  content_html?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  title: string;
  paragraph1: string;
  paragraph2: string;
  paragraph3: string;
  fotos: number | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  email_label: string;
  email: string;
  address_label: string;
  address: string;
  phone_label: string;
  phone: string;
  name_label: string;
  message_label: string;
  send_label: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo: number | Media;
  rights: string;
  topNavigation?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  bottomNavigation?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offers".
 */
export interface Offer {
  id: number;
  offers?:
    | {
        name: number | OfferId;
        html: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}